name: Build on main

on:
  push:
    branches:
      - main
  schedule:
      - cron: '0 0 * * 2'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\msys2_github\
        update: true
        install: >-
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-nasm
            mingw-w64-x86_64-yasm
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-SDL2
            git
            base-devel
            autotools
        msystem: MINGW64
        path-type: strict
    - name: build_dav1d
      shell: msys2 {0}
      run: |
        git clone -b 0.9.2 https://code.videolan.org/videolan/dav1d
        cd dav1d && mkdir dav1d_build
        cd dav1d_build && meson .. --buildtype release --default-library static --prefix=/mingw64/
        ninja
        ninja install
    - name: build_ffmpeg
      shell: msys2 {0}
      run: |
        export LDFLAGS="-static -static-libgcc -static-libstdc++ -s"
        git clone https://github.com/ffvvc/FFmpeg
        cd ffmpeg
        ./configure --disable-debug --enable-version3 --enable-gpl --enable-ffplay --enable-libdav1d --pkg-config-flags=--static --enable-static
        make -j 2
    - name: postprocessing
      shell: cmd
      run: |
        copy /y ffmpeg\ffmpeg.exe ffmpeg.exe
        copy /y ffmpeg\ffprobe.exe ffprobe.exe
        copy /y ffmpeg\ffplay.exe ffplay.exe
        copy /y dav1d\COPYING dav1d_COPYING.txt
        copy /y ffmpeg\COPYING.GPLv3 ffmpeg_COPYING.txt
        7z a ffvvc-FFmpeg.7z ffmpeg.exe ffprobe.exe ffplay.exe dav1d_COPYING.txt ffmpeg_COPYING.txt
    - name: Upload result
      uses: actions/upload-artifact@v3
      with:
        name: ffvvc-FFmpeg
        path: |
          ffvvc-FFmpeg.7z

  create_release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - uses: actions/download-artifact@v3
      with:
        name: ffvvc-FFmpeg
        path: artifacts
    
    - name: Get Date
      id: get_date
      run: |
        DATE_TIME=`date +'%Y-%m-%d-%H-%M-%S'`
        echo "DATE_TIME=${DATE_TIME}" >> $GITHUB_OUTPUT        
    # https://github.com/Mr-Ojii/L-SMASH-Works-Auto-Builds
    - name: Create a Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME=build-${{ steps.get_date.outputs.DATE_TIME }}
        assets=()
        for asset in ${{ github.workspace }}/artifacts/*.7z; do
          assets+=("$asset")
        done
        gh release create "$TAG_NAME" "${assets[@]}"
        